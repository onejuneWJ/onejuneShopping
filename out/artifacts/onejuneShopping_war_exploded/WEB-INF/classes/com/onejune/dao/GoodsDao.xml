<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onejune.dao.GoodsDao">
    <resultMap id="BaseResultMap" type="com.onejune.pojo.Goods">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="bigType" jdbcType="INTEGER" property="bigtype"/>
        <result column="smallType" jdbcType="INTEGER" property="smalltype"/>
        <result column="goodFrom" jdbcType="VARCHAR" property="goodfrom"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="Price" jdbcType="REAL" property="price"/>
        <result column="buyTimes" jdbcType="INTEGER" property="buytimes"/>
        <result column="img" jdbcType="VARCHAR" property="img"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, bigType, smallType, goodFrom, `name`, createTime, Price, buyTimes, img
  </sql>
    <select id="selectByExample" parameterType="com.onejune.pojo.GoodsExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.onejune.pojo.GoodsExample">
        delete from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.onejune.pojo.Goods" useGeneratedKeys="true">
    insert into goods (id,bigType, smallType, goodFrom,
      `name`, createTime, Price, 
      buyTimes, img)
    values (#{id,jdbcType=INTEGER},#{bigtype,jdbcType=INTEGER}, #{smalltype,jdbcType=INTEGER}, #{goodfrom,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{price,jdbcType=REAL}, 
      #{buytimes,jdbcType=INTEGER}, #{img,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.onejune.pojo.Goods"
            useGeneratedKeys="true">
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bigtype != null">
                bigType,
            </if>
            <if test="smalltype != null">
                smallType,
            </if>
            <if test="goodfrom != null">
                goodFrom,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="createtime != null">
                createTime,
            </if>
            <if test="price != null">
                Price,
            </if>
            <if test="buytimes != null">
                buyTimes,
            </if>
            <if test="img != null">
                img,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="bigtype != null">
                #{bigtype,jdbcType=INTEGER},
            </if>
            <if test="smalltype != null">
                #{smalltype,jdbcType=INTEGER},
            </if>
            <if test="goodfrom != null">
                #{goodfrom,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="price != null">
                #{price,jdbcType=REAL},
            </if>
            <if test="buytimes != null">
                #{buytimes,jdbcType=INTEGER},
            </if>
            <if test="img != null">
                #{img,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.onejune.pojo.GoodsExample" resultType="java.lang.Long">
        select count(*) from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update goods
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.bigtype != null">
                bigType = #{record.bigtype,jdbcType=INTEGER},
            </if>
            <if test="record.smalltype != null">
                smallType = #{record.smalltype,jdbcType=INTEGER},
            </if>
            <if test="record.goodfrom != null">
                goodFrom = #{record.goodfrom,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.createtime != null">
                createTime = #{record.createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.price != null">
                Price = #{record.price,jdbcType=REAL},
            </if>
            <if test="record.buytimes != null">
                buyTimes = #{record.buytimes,jdbcType=INTEGER},
            </if>
            <if test="record.img != null">
                img = #{record.img,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update goods
        set id = #{record.id,jdbcType=INTEGER},
        bigType = #{record.bigtype,jdbcType=INTEGER},
        smallType = #{record.smalltype,jdbcType=INTEGER},
        goodFrom = #{record.goodfrom,jdbcType=VARCHAR},
        `name` = #{record.name,jdbcType=VARCHAR},
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
        Price = #{record.price,jdbcType=REAL},
        buyTimes = #{record.buytimes,jdbcType=INTEGER},
        img = #{record.img,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.onejune.pojo.Goods">
        update goods
        <set>
            <if test="bigtype != null">
                bigType = #{bigtype,jdbcType=INTEGER},
            </if>
            <if test="smalltype != null">
                smallType = #{smalltype,jdbcType=INTEGER},
            </if>
            <if test="goodfrom != null">
                goodFrom = #{goodfrom,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                createTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="price != null">
                Price = #{price,jdbcType=REAL},
            </if>
            <if test="buytimes != null">
                buyTimes = #{buytimes,jdbcType=INTEGER},
            </if>
            <if test="img != null">
                img = #{img,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.onejune.pojo.Goods">
    update goods
    set bigType = #{bigtype,jdbcType=INTEGER},
      smallType = #{smalltype,jdbcType=INTEGER},
      goodFrom = #{goodfrom,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      Price = #{price,jdbcType=REAL},
      buyTimes = #{buytimes,jdbcType=INTEGER},
      img = #{img,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>