<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onejune.dao.GorderDao">
    <resultMap id="BaseResultMap" type="com.onejune.pojo.Gorder">
        <id column="number" jdbcType="VARCHAR" property="number"/>
        <result column="goodsid" jdbcType="INTEGER" property="goodsid"/>
        <result column="memberid" jdbcType="INTEGER" property="memberid"/>
        <result column="amount" jdbcType="REAL" property="amount"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="bz" jdbcType="VARCHAR" property="bz"/>
        <result column="delivered" jdbcType="BIT" property="delivered"/>
        <result column="quantity" jdbcType="INTEGER" property="quantity"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    `number`, goodsid, memberid, amount, address, tel, bz, delivered, quantity, createtime
  </sql>
    <select id="selectByExample" parameterType="com.onejune.pojo.GorderExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from gorder
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from gorder
        where `number` = #{number,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from gorder
    where `number` = #{number,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.onejune.pojo.GorderExample">
        delete from gorder
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="number" keyProperty="number" parameterType="com.onejune.pojo.Gorder"
            useGeneratedKeys="true">
    insert into gorder (number,goodsid, memberid, amount,
      address, tel, bz, delivered, 
      quantity, createtime)
    values (#{number,jdbcType=VARCHAR},#{goodsid,jdbcType=INTEGER}, #{memberid,jdbcType=INTEGER}, #{amount,jdbcType=REAL},
      #{address,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{bz,jdbcType=VARCHAR}, #{delivered,jdbcType=BIT}, 
      #{quantity,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" keyColumn="number" keyProperty="number" parameterType="com.onejune.pojo.Gorder"
            useGeneratedKeys="true">
        insert into gorder
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="number != null">
                number,
            </if>
            <if test="goodsid != null">
                goodsid,
            </if>
            <if test="memberid != null">
                memberid,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="tel != null">
                tel,
            </if>
            <if test="bz != null">
                bz,
            </if>
            <if test="delivered != null">
                delivered,
            </if>
            <if test="quantity != null">
                quantity,
            </if>
            <if test="createtime != null">
                createtime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="number != null">
                #{number,jdbcType=VARCHAR},
            </if>
            <if test="goodsid != null">
                #{goodsid,jdbcType=INTEGER},
            </if>
            <if test="memberid != null">
                #{memberid,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=REAL},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                #{tel,jdbcType=VARCHAR},
            </if>
            <if test="bz != null">
                #{bz,jdbcType=VARCHAR},
            </if>
            <if test="delivered != null">
                #{delivered,jdbcType=BIT},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.onejune.pojo.GorderExample" resultType="java.lang.Long">
        select count(*) from gorder
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update gorder
        <set>
            <if test="record.number != null">
                `number` = #{record.number,jdbcType=VARCHAR},
            </if>
            <if test="record.goodsid != null">
                goodsid = #{record.goodsid,jdbcType=INTEGER},
            </if>
            <if test="record.memberid != null">
                memberid = #{record.memberid,jdbcType=INTEGER},
            </if>
            <if test="record.amount != null">
                amount = #{record.amount,jdbcType=REAL},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.tel != null">
                tel = #{record.tel,jdbcType=VARCHAR},
            </if>
            <if test="record.bz != null">
                bz = #{record.bz,jdbcType=VARCHAR},
            </if>
            <if test="record.delivered != null">
                delivered = #{record.delivered,jdbcType=BIT},
            </if>
            <if test="record.quantity != null">
                quantity = #{record.quantity,jdbcType=INTEGER},
            </if>
            <if test="record.createtime != null">
                createtime = #{record.createtime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update gorder
        set `number` = #{record.number,jdbcType=VARCHAR},
        goodsid = #{record.goodsid,jdbcType=INTEGER},
        memberid = #{record.memberid,jdbcType=INTEGER},
        amount = #{record.amount,jdbcType=REAL},
        address = #{record.address,jdbcType=VARCHAR},
        tel = #{record.tel,jdbcType=VARCHAR},
        bz = #{record.bz,jdbcType=VARCHAR},
        delivered = #{record.delivered,jdbcType=BIT},
        quantity = #{record.quantity,jdbcType=INTEGER},
        createtime = #{record.createtime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.onejune.pojo.Gorder">
        update gorder
        <set>
            <if test="goodsid != null">
                goodsid = #{goodsid,jdbcType=INTEGER},
            </if>
            <if test="memberid != null">
                memberid = #{memberid,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=REAL},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=VARCHAR},
            </if>
            <if test="bz != null">
                bz = #{bz,jdbcType=VARCHAR},
            </if>
            <if test="delivered != null">
                delivered = #{delivered,jdbcType=BIT},
            </if>
            <if test="quantity != null">
                quantity = #{quantity,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where `number` = #{number,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.onejune.pojo.Gorder">
    update gorder
    set goodsid = #{goodsid,jdbcType=INTEGER},
      memberid = #{memberid,jdbcType=INTEGER},
      amount = #{amount,jdbcType=REAL},
      address = #{address,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      bz = #{bz,jdbcType=VARCHAR},
      delivered = #{delivered,jdbcType=BIT},
      quantity = #{quantity,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where `number` = #{number,jdbcType=VARCHAR}
  </update>

    <select id="selectByBigType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select gorder.* from gorder,goods where gorder.goodsid=goods.id and goods.bigType=#{bigType}
  </select>
    <select id="selectBySmallType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select gorder.* from gorder,goods where gorder.goodsid=goods.id and goods.bigType=#{smallType}
  </select>
</mapper>